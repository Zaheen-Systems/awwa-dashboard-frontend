import{u as o,t as n,v as u,k as r}from"./index-B8PRHD2z.js";const i=async()=>{const{data:e}=await r.get("/api/users/");return e},d=()=>o({queryKey:["users"],queryFn:i});function p(){const e=n();return u({mutationFn:async s=>{const{id:t,...a}=s;return(await r.post("/api/users/",a)).data},onSuccess:()=>{e.invalidateQueries({queryKey:["users"]})}})}function q(){const e=n();return u({mutationFn:async({id:s,data:t})=>(await r.put(`/api/users/${s}`,t)).data,onSuccess:()=>{e.invalidateQueries({queryKey:["users"]})}})}function w(){const e=n();return u({mutationFn:async s=>(await r.post(`/api/users/${s}/reset-password/`)).data,onSuccess:()=>{e.invalidateQueries({queryKey:["users"]})}})}function U(){const e=n();return u({mutationFn:async s=>{console.log(`Attempting to delete user with ID: ${s}`);const t=await r.delete(`/api/users/${s}`);return console.log("Delete response:",t.data),t.data},onSuccess:(s,t)=>{console.log(`Successfully deleted user with ID: ${t}`),e.invalidateQueries({queryKey:["users"]}),e.invalidateQueries({queryKey:["user"]})},onError:(s,t)=>{console.error(`Failed to delete user with ID: ${t}`,s)}})}const c=async e=>{const{data:s}=await r.get(`/api/users/${e}`);return s},f=e=>o({queryKey:["user",e],queryFn:()=>c(e),enabled:!!e});export{q as a,d as b,p as c,U as d,w as e,f as u};
